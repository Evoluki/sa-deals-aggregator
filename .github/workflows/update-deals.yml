# File: .github/workflows/update-deals.yml
name: Daily Deals Update

on:
  push:
    branches:
      - main
  schedule:
    # Every day at 04:00 UTC (≈06:00 SAST)
    - cron: '0 4 * * *'

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      ### 1) Check out the repository ###
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      ### 2) Set up Python 3.12 ###
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      ### 3) Install just the libraries needed to build lxml ###
      - name: Install system packages for lxml
        run: |
          sudo apt-get update
          sudo apt-get install -y libxml2-dev libxslt1-dev python3-dev

      ### 4) Create & activate a venv, install Python deps ###
      - name: Create venv & install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate

          pip install --upgrade pip
          pip install wheel
          pip install -r requirements.txt

          # Now pull in Playwright’s own runtime dependencies (Chromium + Linux libs)
          playwright install chromium
          playwright install-deps chromium

      ### 5) Run the Takealot scraper, save debug HTML if zero deals ###
      - name: Run Takealot scraper
        run: |
          source venv/bin/activate
          python scraper_takealot_sqlite.py || true

          if [ -f takealot_debug.html ]; then
            echo "⚠️  takealot_debug.html was generated (use artifact to debug)."
          else
            echo "✅  No takealot_debug.html (Takealot scraper likely succeeded)."
          fi

      ### 6) Run the Loot scraper ###
      - name: Run Loot scraper
        run: |
          source venv/bin/activate
          python scraper_loot_dom.py

      ### 7) Clean up >30‐day‐old deals ###
      - name: Clean old deals
        run: |
          source venv/bin/activate
          python cleanup.py

      ### 8) Render index.html ###
      - name: Render HTML
        run: |
          source venv/bin/activate
          python render_deals.py

      ### 9) Commit & push index.html only if it changed ###
      - name: Commit & push changes
        run: |
          git reset --hard HEAD

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Stage only index.html (never deals.db)
          git add index.html

          if git diff --cached --quiet; then
            echo "No changes to index.html → skipping push."
            exit 0
          fi

          git commit -m "Automated daily update: $(date -u +'%Y-%m-%d %H:%M UTC')"
          git pull --rebase origin main
          git push origin main

      ### 10) Upload takealot_debug.html (so you can inspect it if needed) ###
      - name: Upload debug HTML
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: takealot-debug
          path: takealot_debug.html


